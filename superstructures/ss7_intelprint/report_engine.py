import os
import json
from datetime import datetime
from fpdf import FPDF
from utils.gpt_call import call_gpt_model
from utils.db import get_incident, get_job_by_incident, load_chat_log

REPORT_DIR = "logs/reports"

def generate_pdf_report(incident_id: str) -> str:
    try:
        # Ensure report dir
        os.makedirs(REPORT_DIR, exist_ok=True)

        # Load data
        incident = get_incident(incident_id)
        job = get_job_by_incident(incident_id)
        chat = load_chat_log(incident_id)

        # Format for GPT
        chat_text = "\n".join(f"{m['sender']}: {m['message']}" for m in chat)
        job_str = json.dumps(job, indent=2) if job else "No job assigned."

        gpt_prompt = (
            "You are a property maintenance report generator.\n\n"
            "Given a chat log and job history, write a summary report for the landlord that includes:\n"
            "- Overview of issue\n- Timeline of resolution\n- Actions taken\n- Outcome\n"
            "- Optional review or follow-up notes\n\n"
            "Return only plaintext. No formatting. No headings.\n\n"
            f"CHAT:\n{chat_text}\n\nJOB:\n{job_str}"
        )

        summary = call_gpt_model(gpt_prompt)

        # Prepare PDF
        pdf = FPDF()
        pdf.add_page()
        pdf.set_font("Arial", size=12)

        def write_ln(txt): pdf.multi_cell(0, 10, txt)

        # Title
        pdf.set_font("Arial", 'B', 16)
        pdf.cell(0, 10, f"Incident Report ‚Äì ID {incident_id}", ln=True, align="C")
        pdf.ln(10)

        # Section 1: Metadata
        pdf.set_font("Arial", 'B', 12)
        write_ln("üìÑ Incident Metadata")
        pdf.set_font("Arial", size=12)
        for k in ["reported_by", "priority", "issue", "timestamp"]:
            write_ln(f"{k}: {incident.get(k, 'N/A')}")
        pdf.ln(5)

        # Section 2: Summary
        pdf.set_font("Arial", 'B', 12)
        write_ln("üß† GPT Summary")
        pdf.set_font("Arial", size=12)
        write_ln(summary.strip())
        pdf.ln(5)

        # Section 3: Key Messages
        pdf.set_font("Arial", 'B', 12)
        write_ln("üí¨ Chat Highlights")
        pdf.set_font("Arial", size=12)
        for m in chat[-5:]:
            write_ln(f"{m['sender']}: {m['message']}")
        pdf.ln(5)

        # Footer
        timestamp = datetime.now().isoformat()
        write_ln(f"Report generated on: {timestamp}")
        pdf.set_y(-20)
        pdf.set_font("Arial", "I", 10)
        pdf.cell(0, 10, "Generated by LandTen Agent ¬∑ ¬© 2025", 0, 0, "C")

        # Save
        path = os.path.join(REPORT_DIR, f"incident_{incident_id}.pdf")
        pdf.output(path)
        return os.path.abspath(path)

    except Exception as e:
        return f"‚ö†Ô∏è PDF generation failed: {str(e)}"